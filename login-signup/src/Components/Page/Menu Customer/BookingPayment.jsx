import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { experts } from "../../fake data/data"; // Import danh s√°ch chuy√™n gia
import style from "./BookingPayment.module.css";

export const BookingPayment = () => {
  const { expertId, date, endDate, sessionCount } = useParams();
  const navigate = useNavigate();
  const [booking, setBooking] = useState(null);
  const [user, setUser] = useState(null);
  const [paymentMethod, setPaymentMethod] = useState("");
  const [totalAmount, setTotalAmount] = useState(0);

  useEffect(() => {
    const storedUser = JSON.parse(localStorage.getItem("user")) || null;
    setUser(storedUser);

    if (storedUser) {
      const userBookings = JSON.parse(localStorage.getItem(`bookings_${storedUser.id}`)) || [];
      const foundBooking = userBookings.find(
        (b) => b.expertId === expertId && b.date === date && b.endDate === endDate
      );
      setBooking(foundBooking);

      // L·∫•y gi√° chuy√™n gia t·ª´ danh s√°ch
      const expert = experts.find((exp) => exp.id === Number(expertId));

      // Ki·ªÉm tra d·ªØ li·ªáu h·ª£p l·ªá tr∆∞·ªõc khi t√≠nh to√°n
      const sessionNum = Number(sessionCount) || 1; // Chuy·ªÉn ƒë·ªïi sessionCount th√†nh s·ªë, m·∫∑c ƒë·ªãnh l√† 1 n·∫øu l·ªói
      const pricePerSession = expert?.pricePerSession || 0; // ƒê·∫£m b·∫£o c√≥ gi√° h·ª£p l·ªá

      setTotalAmount(sessionNum * pricePerSession); // T√≠nh t·ªïng ti·ªÅn
    }
  }, [expertId, date, endDate, sessionCount]);

  const handlePayment = () => {
    if (!paymentMethod) {
      alert("Vui l√≤ng ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n!");
      return;
    }

    if (!booking) {
      alert("Kh√¥ng t√¨m th·∫•y l·ªãch ƒë·∫∑t.");
      return;
    }

    const updatedBookings = JSON.parse(localStorage.getItem(`bookings_${user.id}`)) || [];
    const newBookings = updatedBookings.map((b) =>
      b.expertId === booking.expertId && b.date === booking.date && b.endDate === booking.endDate
        ? { ...b, status: "ƒê√£ thanh to√°n", amountPaid: totalAmount }
        : b
    );

    localStorage.setItem(`bookings_${user.id}`, JSON.stringify(newBookings));

    alert(`Thanh to√°n th√†nh c√¥ng ${totalAmount.toLocaleString()} VNƒê!`);
    navigate("/my-booking");
  };

  if (!user) {
    return <div className={style.notFound}>B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p!</div>;
  }

  if (!booking) {
    return <div className={style.notFound}>L·ªãch ƒë·∫∑t kh√¥ng t·ªìn t·∫°i!</div>;
  }

  return (
    <div className={style.container}>
      <h2>Thanh to√°n l·ªãch h·∫πn</h2>
      <div className={style.bookingInfo}>
        <p><strong>Chuy√™n gia:</strong> {booking.expertName}</p>
        <p><strong>Ng√†y:</strong> {booking.date}</p>
        <p><strong>Ng√†y k·∫øt th√∫c:</strong> {booking.endDate}</p>
        <p><strong>S·ªë bu·ªïi:</strong> {sessionCount}</p>
        <p><strong>Tr·∫°ng th√°i:</strong> {booking.status || "Ch∆∞a thanh to√°n"}</p>
        <p className={style.totalAmount}>
          <strong>T·ªïng ti·ªÅn:</strong> {totalAmount.toLocaleString()} VNƒê
        </p>
      </div>

      <h3>Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n:</h3>
      <div className={style.paymentOptions}>
        <label>
          <input
            type="radio"
            value="creditCard"
            checked={paymentMethod === "creditCard"}
            onChange={(e) => setPaymentMethod(e.target.value)}
          />
          üí≥ Th·∫ª t√≠n d·ª•ng / Ghi n·ª£
        </label>
        <label>
          <input
            type="radio"
            value="momo"
            checked={paymentMethod === "momo"}
            onChange={(e) => setPaymentMethod(e.target.value)}
          />
          üì± V√≠ MoMo
        </label>
        <label>
          <input
            type="radio"
            value="bankTransfer"
            checked={paymentMethod === "bankTransfer"}
            onChange={(e) => setPaymentMethod(e.target.value)}
          />
          üè¶ Chuy·ªÉn kho·∫£n ng√¢n h√†ng
        </label>
      </div>

      <button className={style.payButton} onClick={handlePayment}>
        X√°c nh·∫≠n & Thanh to√°n
      </button>
    </div>
  );
};
